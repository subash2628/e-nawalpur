{"version":3,"sources":["components/functions/Global_Data.js","components/store/actions/authActions.js","components/store/actions/types.js","components/Routes/Login.js","components/Routes/Register.js","components/Routes/DashBoard.js","components/store/actions/productActions.js","components/Routes/SellProduct.js","components/Routes/profile.js","components/functions/Footer.js","components/functions/Header.js","components/Routes/catagories.js","components/styles/styles.js","components/functions/is-Empty.js","components/store/Reducers/authReducer.js","components/store/Reducers/errorReducer.js","components/store/Reducers/productReducer.js","components/store/Reducers/index.js","components/store/store.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","setCurrentUser","user","type","payload","Login","state","phone","password","errors","onChange","bind","onSubmit","nextProps","auth","isAuthenticated","this","props","history","push","setState","e","target","name","value","preventDefault","loginUser","loggedInId","classes","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","Typography","variant","form","noValidate","TextField","margin","required","fullWidth","id","label","placeholder","autoComplete","autoFocus","error","helperText","FormControlLabel","control","Checkbox","color","Button","submit","disabled","onClick","Grid","container","item","xs","Link","href","React","Component","connect","login","userData","dispach","axios","get","then","res","data","localStorage","setItem","JSON","stringify","catch","err","console","log","response","withRouter","Register","firstName","lastName","company","location","conformPassword","registeredId","loading","newUser","contact","registeruser","disbleButton","spacing","sm","height","width","justify","register","post","status","userId","DashBoard","allProducts","products","heroContent","align","gutterBottom","paragraph","cardGrid","map","card","key","md","Card","CardMedia","image","imageLink","title","CardContent","cardContent","price","quantity","vendor","CardActions","size","getAllProducts","getCatagories","getProductsById","productIdArray","formatIdIntoUri","join","SellProduct","catagory","productImage","showUploadingPlatform","onSell","productId","window","reload","fd","FormData","append","sellProduct","disableButton","button","startIcon","acceptedFiles","cancelButtonText","submitButtonText","maxFileSize","open","onClose","onSave","files","showPreviews","showFileNamesInPreview","errorSellingProduct","soldProduct","newProduct","headers","Profile","cards","makeStyles","theme","icon","marginRight","backgroundColor","palette","background","padding","heroButtons","marginTop","paddingTop","paddingBottom","display","flexDirection","cardMedia","flexGrow","footer","CardActionArea","productsById","Footer","Date","getFullYear","Header","Products","AppBar","position","Toolbar","noWrap","to","Catagory","catagories","keys","Object","useStyles","root","menuButton","breakpoints","up","search","borderRadius","shape","fade","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","grow","sectionDesktop","secondary","main","rootCard","media","isEmpty","undefined","length","trim","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","dispatch","parse","App","Fragment","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.db27fa40.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\n//export const baseURL = \"http://localhost:5000/e-nawalpur/us-central1/app\";\nexport const baseURL = \"https://us-central1-e-nawalpur.cloudfunctions.net/app\";\n\nexport function Loading({\n  type = \"balls\",\n  color = \"#ffffff\",\n  height = \"20%\",\n  width = \"20%\",\n}) {\n  return (\n    <ReactLoading type={type} color={color} height={height} width={width} />\n  );\n}\n","import {\n  GET_ERRORS_LOGIN,\n  GET_ERRORS_REGISTER,\n  SET_CURRENT_USER,\n  RESET_CURRENT_USER,\n} from \"./types\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../functions/Global_Data\";\n\n//Register User\nexport const registeruser = (userData, history) => (dispach) => {\n  axios\n    .post(`${baseURL}/api/users/register`, userData)\n    .then((res) => {\n      //this.setState({ loggedInId: res.data.uniqueId, errors: null })\n      //console.log(res.data);\n      if (res.status === 200) {\n        console.log(res.data.userId);\n        //this.setState({ registeredId: res.data.userId, loading: false });\n        //routing should be done\n        history.push(\"/login\");\n      }\n    })\n    .catch((err) => {\n      dispach({\n        type: GET_ERRORS_REGISTER,\n        payload: err.response.data,\n      });\n      //this.setState({ errors: err.response.data, loading: false });\n      console.log(err.response.data);\n    });\n};\n\n//login User\nexport const loginUser = (userData, history) => (dispach) => {\n  axios\n    .get(`${baseURL}/api/users/login/${userData.phone}----${userData.password}`)\n    .then((res) => {\n      const { user } = res.data;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispach(setCurrentUser(user));\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      console.log(err.response.data);\n      dispach({\n        type: GET_ERRORS_LOGIN,\n        payload: err.response.data,\n        //payload: null,\n      });\n      //console.log(err.response);\n    });\n};\n\n//set logged in user\nexport const setCurrentUser = (user) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user,\n  };\n};\n\n// export const resetCurrentUser = () => {\n//   return {\n//     type: RESET_CURRENT_USER,\n//     //payload: user,\n//   };\n// };\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const SET_PRODUCTS = \"SET_PRODUCTS\";\nexport const SET_CATAGORIES = \"SET_CATAGORIES\";\nexport const SET_PRODUCTS_BY_ID = \"SET_PRODUCTS_BY_ID\";\nexport const SELL_PRODUCT = \"SELL_PRODUCT\";\n\n//ERRORS\nexport const GET_ERRORS_PRODUCT = \"GET_ERRORS_PRODUCT\";\nexport const GET_ERRORS_CATAGORIES = \"GET_ERRORS_CATAGORIES\";\nexport const GET_ERRORS_LOGIN = \"GET_ERRORS_LOGIN\";\nexport const GET_ERRORS_REGISTER = \"GET_ERRORS_REGISTER\";\nexport const GET_ERRORS_PRODUCTBYID = \"GET_ERRORS_PRODUCTBYID\";\nexport const ERROR_SELLING_PRODUCT = \"ERROR_SELLING_PRODUCT\";\n\n//logout\n//export const RESET_CURRENT_USER = \"RESET_CURRENT_USER\";\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\n//import Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n//import { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\n\n// import List from \"@material-ui/core/List\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n\n// import axios from \"axios\";\n//import postData from \"./PostData\";\n// import { baseURL } from \"../functions/Global_Data\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../store/actions/authActions\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      phone: \"\",\n      password: \"\",\n      errors: null,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    } else if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      phone: this.state.phone,\n      password: this.state.password,\n    };\n    this.props.loginUser(user, this.props.history);\n  }\n\n  render() {\n    const { loggedInId, errors, phone, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone Number\"\n              placeholder=\"98........\"\n              name=\"phone\"\n              autoComplete=\"tel\"\n              type=\"number\"\n              autoFocus\n              onChange={this.onChange}\n              value={phone}\n              error={errors ? (errors.phone ? true : false) : false}\n              helperText={errors && errors.phone}\n            />\n            {/* {errors && <div className=\"text-danger\">{errors.phone}</div>} */}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={this.onChange}\n              error={errors ? (errors.password ? true : false) : false}\n              helperText={errors && errors.password}\n            />\n            {/* {errors && <div className=\"text-danger\">{errors.password}</div>} */}\n\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={phone && password ? false : true}\n              onClick={this.onSubmit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        {/* {errors &&\n            Object.keys(this.state.errors).map((obj, i) => (\n              <div className=\"text-danger\">{this.state.errors[obj]}</div>\n            ))} */}\n\n        {/* {loggedInId && (\n          <div className=\"text-success\">\n            Successfully logged in with userId {loggedInId}\n          </div>\n        )} */}\n      </Container>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProp = (state) => ({\n  auth: state.auth,\n  errors: state.errors.login,\n});\n\nexport default connect(mapStateToProp, { loginUser })(withRouter(Login));\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport ReactLoading from \"react-loading\";\nimport { baseURL } from \"../functions/Global_Data\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registeruser } from \"../store/actions/authActions\";\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"#\">\n//         KhullaPasal\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     marginTop: theme.spacing(8),\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     alignItems: \"center\",\n//   },\n//   avatar: {\n//     margin: theme.spacing(1),\n//     backgroundColor: theme.palette.secondary.main,\n//   },\n//   form: {\n//     width: \"100%\", // Fix IE 11 issue.\n//     marginTop: theme.spacing(3),\n//   },\n//   submit: {\n//     margin: theme.spacing(3, 0, 2),\n//   },\n// }));\n\n// export default function SignUp() {\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      company: \"\",\n      location: \"\",\n      password: \"\",\n      conformPassword: \"\",\n      errors: null,\n      registeredId: null,\n      loading: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors, loading: false });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit() {\n    this.setState({ loading: true, errors: null });\n    const {\n      firstName,\n      lastName,\n      phone,\n      password,\n      company,\n      location,\n      conformPassword,\n      //errors,\n      //classes,\n    } = this.state;\n\n    const newUser = {\n      name: `${firstName} ${lastName}`,\n      contact: phone,\n      password: password,\n      conformPassword: conformPassword,\n      location: location,\n      company: company,\n    };\n    console.log(newUser);\n    this.props.registeruser(newUser, this.props.history);\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      phone,\n      password,\n      company,\n      location,\n      conformPassword,\n      errors,\n\n      loading,\n    } = this.state;\n    const disbleButton =\n      firstName &&\n      lastName &&\n      phone &&\n      password &&\n      company &&\n      location &&\n      conformPassword\n        ? false\n        : true;\n\n    const classes = this.props.classes;\n    const { user } = this.props.auth;\n    //console.log(this.props.auth.user);\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up{user ? user.name : null}\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"on\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  onChange={this.onChange}\n                  value={firstName}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"on\"\n                  onChange={this.onChange}\n                  value={lastName}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"phone\"\n                  label=\"phoneNumber\"\n                  name=\"phone\"\n                  autoComplete=\"tel\"\n                  type=\"number\"\n                  onChange={this.onChange}\n                  value={phone}\n                  error={errors ? (errors.phone ? true : false) : false}\n                  helperText={errors && errors.phone}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"company\"\n                  label=\"your company\"\n                  name=\"company\"\n                  autoComplete=\"on\"\n                  //type=\"number\"\n                  onChange={this.onChange}\n                  value={company}\n                  error={errors ? (errors.company ? true : false) : false}\n                  helperText={errors && errors.company}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"location\"\n                  label=\"Location\"\n                  name=\"location\"\n                  autoComplete=\"on\"\n                  //type=\"number\"\n                  onChange={this.onChange}\n                  value={location}\n                  error={errors ? (errors.location ? true : false) : false}\n                  helperText={errors && errors.location}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={this.onChange}\n                  value={password}\n                  error={errors ? (errors.password ? true : false) : false}\n                  helperText={errors && errors.password}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"conformPassword\"\n                  label=\"Conform Password\"\n                  type=\"password\"\n                  id=\"Conform Password\"\n                  autoComplete=\"current-password\"\n                  onChange={this.onChange}\n                  value={conformPassword}\n                  error={\n                    errors ? (errors.conformPassword ? true : false) : false\n                  }\n                  helperText={errors && errors.conformPassword}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive products updates via phone.\"\n                />\n              </Grid>\n            </Grid>\n            {!loading && (\n              <Button\n                //type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                disabled={disbleButton}\n                onClick={this.onSubmit}\n              >\n                Sign Up\n              </Button>\n            )}\n            {loading && (\n              <ReactLoading\n                type={\"spin\"}\n                color={\"blue\"}\n                height={\"15%\"}\n                width={\"15%\"}\n              />\n            )}\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\nRegister.propTypes = {\n  registeruser: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors.register,\n});\nexport default connect(mapStateToProps, { registeruser })(withRouter(Register));\n","import React from \"react\";\n// import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\n// import CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\n// import { baseURL } from \"./Global_Data\";\n// import ReactLoading from \"react-loading\";\n// import InputBase from \"@material-ui/core/InputBase\";\n// //import Badge from '@material-ui/core/Badge';\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import axios from \"axios\";\n\n//import { Header } from \"./HeaderAndFooter\";\n//import { Footer } from \"./HeaderAndFooter\";\n\nimport { connect } from \"react-redux\";\n\nclass DashBoard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allProducts: null,\n    };\n    //this.onChange = this.onChange.bind(this);\n    //this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.products) {\n      this.setState({ allProducts: nextProps.products });\n    }\n  }\n\n  render() {\n    // const classes = this.props.classes;\n    const allProducts = this.state.allProducts\n      ? this.state.allProducts\n      : this.props.products;\n    const { classes } = this.props;\n    if (classes) {\n      return (\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroContent}>\n            <Container maxWidth=\"sm\">\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Kule Mart\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                We dont build links, We build relationships\n              </Typography>\n            </Container>\n          </div>\n          <div className=\"mt-5 mb-5\">\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n              {/* End hero unit */}\n              <Grid container spacing={4}>\n                {allProducts &&\n                  allProducts.map((card) => (\n                    <Grid item key={card.id} xs={12} sm={6} md={4}>\n                      <Card className={classes.card}>\n                        <CardMedia\n                          className=\"card-img-top\"\n                          image={card.imageLink}\n                          title={card.name}\n                        />\n                        {/* <img\n                          src={card.imageLink}\n                          class=\"card-img-top h-10%\"\n                          alt=\"RANDOM\"\n                        ></img> */}\n                        {/* </CardMedia> */}\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {card.name}\n                          </Typography>\n                          <Typography>\n                            <div className=\"text-justify font-italic\">\n                              Contact:{card.contact}\n                            </div>\n                            <div className=\"text-justify font-italic\">\n                              Location: {card.location}\n                            </div>\n                            <div className=\"text-justify font-italic\">\n                              price: {card.price}\n                            </div>\n                            <div className=\"text-justify font-italic\">\n                              Quantity: {card.quantity}\n                            </div>\n                            <div className=\"text-justify font-italic\">\n                              Provider: {card.vendor}\n                            </div>\n                          </Typography>\n                        </CardContent>\n                        <CardActions>\n                          <Button size=\"small\" color=\"primary\">\n                            Buy\n                          </Button>\n                          <Button size=\"small\" color=\"primary\">\n                            More Details\n                          </Button>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                  ))}\n              </Grid>\n            </Container>\n          </div>\n        </main>\n      );\n    }\n    return <div></div>;\n  }\n}\nconst mapStateToProps = (state) => ({\n  products: state.products.products,\n});\nexport default connect(mapStateToProps, {})(DashBoard);\n","import { baseURL } from \"../../functions/Global_Data\";\nimport {\n  SET_PRODUCTS,\n  GET_ERRORS_PRODUCT,\n  SET_CATAGORIES,\n  GET_ERRORS_CATAGORIES,\n  SET_PRODUCTS_BY_ID,\n  GET_ERRORS_PRODUCTBYID,\n  SELL_PRODUCT,\n  ERROR_SELLING_PRODUCT,\n} from \"./types\";\n\nimport axios from \"axios\";\nexport const getAllProducts = () => (dispach) => {\n  //const formatIdIntoUri = productIdArray.join(\"&\");\n  //console.log(formatIdIntoUri);\n  axios\n    .get(`${baseURL}/api/product/all`)\n    .then((res) => {\n      //const { profile } = res.data;\n      //console.log(res.data);\n      dispach({\n        type: SET_PRODUCTS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      //console.log(err.response.data);\n      dispach({\n        type: GET_ERRORS_PRODUCT,\n        payload: err.response.data,\n      });\n      //console.log(err.response);\n    });\n};\n\nexport const getCatagories = () => (dispach) => {\n  //const formatIdIntoUri = productIdArray.join(\"&\");\n  //console.log(formatIdIntoUri);\n  axios\n    .get(`${baseURL}/api/product/catagory/all`)\n    .then((res) => {\n      //const { profile } = res.data;\n      //console.log(res.data);\n      dispach({\n        type: SET_CATAGORIES,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      //console.log(err.response.data);\n      dispach({\n        type: GET_ERRORS_CATAGORIES,\n        payload: err.response.data,\n      });\n      //console.log(err.response);\n    });\n};\n\nexport const getProductsById = (productIdArray) => (dispach) => {\n  const formatIdIntoUri = productIdArray.join(\"&\");\n  //console.log(formatIdIntoUri);\n  axios\n    .get(`${baseURL}/api/product/id/${formatIdIntoUri}`)\n    .then((res) => {\n      //const { profile } = res.data;\n      //console.log(res.data);\n      dispach({\n        type: SET_PRODUCTS_BY_ID,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(err.response.data);\n      dispach({\n        type: GET_ERRORS_PRODUCTBYID,\n        payload: err.response.data,\n        //payload: null,\n      });\n      //console.log(err.response);\n    });\n};\n\nexport const sellProduct = (newProduct) => (dispach) => {\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  };\n  //console.log(\"action \", newProduct);\n  axios\n    .post(`${baseURL}/api/product/sell`, newProduct, config)\n    .then((res) => {\n      //console.log(\"response \", res.data);\n\n      dispach({\n        type: SELL_PRODUCT,\n        payload: res.data,\n      });\n      //history.push('/');\n    })\n    .catch((err) => {\n      dispach({\n        type: ERROR_SELLING_PRODUCT,\n        payload: err.response.data,\n      });\n    });\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\n//import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n//import Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\n\nimport ReactLoading from \"react-loading\";\nimport { connect } from \"react-redux\";\nimport {\n  sellProduct,\n  getAllProducts,\n  getProductsById,\n  getCatagories,\n} from \"../store/actions/productActions\";\n\nimport { withRouter } from \"react-router-dom\";\nimport propTypes from \"prop-types\";\n\nclass SellProduct extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: null,\n      catagory: null,\n      price: null,\n      quantity: null,\n      productImage: null,\n      showUploadingPlatform: false,\n      errors: null,\n      loading: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSell = this.onSell.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors, loading: false });\n    } else if (nextProps.productId) {\n      this.props.history.push(\"/\");\n      window.location.reload();\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSell() {\n    this.setState({ errors: null, loading: true });\n    const { name, catagory, price, quantity, productImage } = this.state;\n\n    const newProduct = {\n      name: name,\n      catagory: catagory,\n      price: price,\n      quantity: quantity,\n      productImage: productImage,\n      userId: this.props.userId,\n    };\n    //console.log(newProduct);\n\n    const fd = new FormData();\n    //console.log(formData);\n\n    fd.append(\"productImage\", productImage);\n    fd.append(\"name\", name);\n    fd.append(\"price\", price);\n    fd.append(\"catagory\", catagory);\n    fd.append(\"quantity\", quantity);\n    fd.append(\"userId\", this.props.userId);\n    //console.log(fd);\n    this.props.sellProduct(fd);\n    // this.props.getAllProducts();\n    // this.props.getCatagories();\n    // this.props.getProductsById();\n  }\n\n  render() {\n    const {\n      name,\n      catagory,\n      price,\n      quantity,\n      productImage,\n      showUploadingPlatform,\n      errors,\n      loading,\n    } = this.state;\n    const classes = this.props.classes;\n    const disableButton =\n      name && catagory && price && quantity && productImage ? false : true;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sell Product\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"off\"\n                  name=\"name\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Product Name\"\n                  autoFocus\n                  //onClick={this.onChange}\n                  error={errors ? (errors.name ? true : false) : false}\n                  helperText={errors && errors.name}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"catagory\"\n                  label=\"Catagory\"\n                  name=\"catagory\"\n                  autoComplete=\"off\"\n                  onChange={this.onChange}\n                  error={errors ? (errors.catagory ? true : false) : false}\n                  helperText={errors && errors.catagory}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"price\"\n                  label=\"Price\"\n                  name=\"price\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  onChange={this.onChange}\n                  error={errors ? (errors.price ? true : false) : false}\n                  helperText={errors && errors.price}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"quantity\"\n                  label=\"Quantity\"\n                  type=\"quantity\"\n                  id=\"quantity\"\n                  autoComplete=\"off\"\n                  placeholder=\"ie 1 kg, 1 pkg, 1 pathi, 5 aana etc\"\n                  onChange={this.onChange}\n                  error={errors ? (errors.quantity ? true : false) : false}\n                  helperText={errors && errors.quantity}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"contained\"\n                  color=\"default\"\n                  className={classes.button}\n                  startIcon={<CloudUploadIcon />}\n                  fullWidth\n                  onClick={() => this.setState({ showUploadingPlatform: true })}\n                >\n                  Add one productImage\n                </Button>\n                {errors && errors.productImage && (\n                  <div className=\"text-justify text-danger\">\n                    {errors.productImage}\n                  </div>\n                )}\n                <DropzoneDialog\n                  acceptedFiles={[\"image/*\"]}\n                  cancelButtonText={\"cancel\"}\n                  submitButtonText={\"submit\"}\n                  maxFileSize={1024 * 1024}\n                  open={showUploadingPlatform}\n                  onClose={() =>\n                    this.setState({ showUploadingPlatform: false })\n                  }\n                  onSave={(files) => {\n                    console.log(\"Files:\", files);\n                    this.setState({\n                      showUploadingPlatform: false,\n                      productImage: files[0],\n                    });\n                  }}\n                  showPreviews={true}\n                  showFileNamesInPreview={true}\n                />\n              </Grid>\n            </Grid>\n\n            {!loading ? (\n              <div className=\"mt-3\">\n                <Button\n                  //type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  disabled={disableButton}\n                  onClick={this.onSell}\n                >\n                  Sell\n                </Button>\n              </div>\n            ) : (\n              <div className=\"d-flex justify-content-center mt-3\">\n                <ReactLoading\n                  type={\"spin\"}\n                  color={\"blue\"}\n                  height={\"10%\"}\n                  width={\"10%\"}\n                />\n              </div>\n            )}\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\nSellProduct.propTypes = {\n  productId: propTypes.string.isRequired,\n  errors: propTypes.object.isRequired,\n  userId: propTypes.string.isRequired,\n};\n\nconst mapStateToProp = (state) => ({\n  errors: state.errors.errorSellingProduct,\n  productId: state.products.soldProduct,\n  userId: state.auth.user.id,\n});\n\nexport default connect(mapStateToProp, {\n  sellProduct,\n  getAllProducts,\n  getProductsById,\n  getCatagories,\n})(withRouter(SellProduct));\n","import React from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport { connect } from \"react-redux\";\n\nimport { getProductsById } from \"../store/actions/productActions\";\n\nfunction styles() {\n  const useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    cardMedia: {\n      paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n  }));\n  return useStyles;\n}\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cards: null,\n    };\n  }\n\n  componentDidMount() {\n    const classes = styles();\n    this.setState({ classes: classes });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.products) {\n      this.setState({ cards: nextProps.products });\n    }\n  }\n\n  render() {\n    const { user } = this.props;\n    const { classes } = this.state;\n    const cards = this.state.cards ? this.state.cards : this.props.products;\n    if (!classes) {\n      console.log(\"!classes\");\n      return <div></div>;\n    }\n    return (\n      <div>\n        <div className=\" \">\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.CardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {user.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  UserId: {user.id}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Location: {user.location}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Company: {user.company}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Phone: {user.phone}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Share\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        </div>\n        <div className=\" mt-3 display-4\">My Products</div>\n        <div className=\"mt-5 mb-5\">\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {cards &&\n                cards.map((card) => (\n                  <Grid item key={card.id} xs={12} sm={6} md={4}>\n                    <Card className={classes.card}>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image={card.imageLink}\n                        title={card.name}\n                      />\n                      {/* <img\n                        src={card.imageLink}\n                        class=\"card-img-top h-10%\"\n                        alt=\"RANDOM\"\n                      ></img> */}\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {card.name}\n                        </Typography>\n                        <Typography>\n                          <div className=\"text-justify font-italic\">\n                            Contact:{card.contact}\n                          </div>\n                          <div className=\"text-justify font-italic\">\n                            Location: {card.location}\n                          </div>\n                          <div className=\"text-justify font-italic\">\n                            price: {card.price}\n                          </div>\n                          <div className=\"text-justify font-italic\">\n                            Quantity: {card.quantity}\n                          </div>\n                          <div className=\"text-justify font-italic\">\n                            Provider: {card.vendor}\n                          </div>\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button size=\"small\" color=\"primary\">\n                          Buy\n                        </Button>\n                        <Button size=\"small\" color=\"primary\">\n                          More Details\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                ))}\n            </Grid>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProp = (state) => ({\n  user: state.auth.user,\n  products: state.products.productsById,\n});\n\nexport default connect(mapStateToProp, { getProductsById })(Profile);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ReactLoading from \"react-loading\";\nimport Button from \"@material-ui/core/Button\";\n//import history from \"./history\";\n\nexport function Footer({ classes }) {\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Kule Mart\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        Thanks for Visiting Our Site\n      </Typography>\n\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {\"Copyright © \"}\n        <Link color=\"inherit\" href=\"https://www.google.com\">\n          Kule Mart\n        </Link>{\" \"}\n        {new Date().getFullYear()}\n        {\".\"}\n      </Typography>\n    </footer>\n  );\n}\n\nexport function Loading() {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <ReactLoading\n        type={\"spin\"}\n        color={\"green\"}\n        height={\"20%\"}\n        width={\"20%\"}\n      />\n    </div>\n  );\n}\n// export function NewHeader({ classes }) {\n//   return (\n//     <div className={classes.root}>\n//       <AppBar position=\"static\">\n//         <Toolbar>\n//           <IconButton\n//             edge=\"start\"\n//             className={classes.menuButton}\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography className={classes.title} variant=\"h6\" noWrap>\n//             Material-UI\n//           </Typography>\n//           <div className={classes.search}>\n//             <div className={classes.searchIcon}>\n//               <SearchIcon />\n//             </div>\n//             <InputBase\n//               placeholder=\"Search…\"\n//               classes={{\n//                 root: classes.inputRoot,\n//                 input: classes.inputInput,\n//               }}\n//               inputProps={{ \"aria-label\": \"search\" }}\n//             />\n//           </div>\n//         </Toolbar>\n//       </AppBar>\n//     </div>\n//   );\n// }\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n// import InputBase from \"@material-ui/core/InputBase\";\n// import { fade, makeStyles } from \"@material-ui/core/styles\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import ReactLoading from \"react-loading\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { connect } from \"react-redux\";\n//import { getProducts } from \"../store/actions/productById\";\nimport {\n  getAllProducts,\n  getCatagories,\n  getProductsById,\n} from \"../store/actions/productActions\";\nimport { setCurrentUser } from \"../store/actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nclass Header extends React.Component {\n  // constructor(){\n  //     super();\n  //     this.state={\n  //         isAuthenticated: false,\n  //     }\n  // }\n  componentDidMount() {\n    //this.props.getProducts(this.props.auth.user.ItemsForSell);\n    const { isAuthenticated } = this.props.auth;\n    this.props.getAllProducts();\n    this.props.getCatagories();\n    isAuthenticated &&\n      this.props.getProductsById(this.props.auth.user.Products);\n  }\n  render() {\n    const { classes } = this.props;\n    const { isAuthenticated } = this.props.auth;\n    return (\n      <div className=\"d-flex flex-row\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            {/* <CameraIcon className={classes.icon} /> */}\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className=\"d-inline-flex p-2\"\n            >\n              <Link to=\"/\" className=\"btn text-white\">\n                <h4>Khulla Pasal</h4>\n              </Link>\n            </Typography>\n\n            <div className=\"d-inline-flex p-2 flex-grow-1 justify-content-end\">\n              {!isAuthenticated && (\n                <Link to=\"/login\" className=\"btn  text-white mr-3\">\n                  Login\n                </Link>\n              )}\n\n              {!isAuthenticated && (\n                <Link to=\"/register\" className=\"btn  text-white mr-3\">\n                  Sign Up\n                </Link>\n              )}\n\n              {isAuthenticated && (\n                <Link to=\"/sell\" className=\"btn  text-white mr-3\">\n                  Sell\n                </Link>\n              )}\n\n              <Link to=\"/catagory\" className=\"btn  text-white mr-3\">\n                Catagories\n              </Link>\n\n              {isAuthenticated && (\n                <Link to=\"/profile\" className=\"btn  text-white mr-3\">\n                  My Profile\n                </Link>\n              )}\n\n              {isAuthenticated && (\n                <Button\n                  className=\"btn btn-outline text-white mr-3\"\n                  onClick={() => {\n                    //empty local storage\n\n                    localStorage.setItem(\"user\", null);\n                    this.props.setCurrentUser();\n                    this.props.history.push(\"/\");\n                    //console.log(\"logOut\");\n                  }}\n                >\n                  Sign Out\n                </Button>\n              )}\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProp, {\n  getAllProducts,\n  getCatagories,\n  setCurrentUser,\n  getProductsById,\n})(withRouter(Header));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\n\nclass Catagory extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      catagories: null,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.catagories) {\n      this.setState({ catagories: nextProps.catagories });\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    const catagories = this.state.catagories\n      ? this.state.catagories\n      : this.props.catagories;\n\n    //catagories is object of arrays\n    const keys = catagories && Object.keys(catagories);\n\n    // catagories && console.log(catagories[keys[0]]);\n    //catagories && keys.map((key) => console.log(key));\n\n    return (\n      <div>\n        <div className=\" mt-3 display-4\">Catagories</div>\n        {catagories &&\n          keys.map((key) => (\n            <div>\n              <div className=\"mt-3 font-weight-bold h3\">{key}</div>\n              <div key={key} className=\"mt-5 mb-5\">\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                  {/* End hero unit */}\n                  <Grid container spacing={4}>\n                    {catagories[key].map((card) => (\n                      <Grid item key={card.id} xs={12} sm={6} md={4}>\n                        <Card className={classes.card}>\n                          <CardMedia\n                            className={classes.cardMedia}\n                            image=\"https://source.unsplash.com/random\"\n                            title={card.name}\n                          />\n                          <CardContent className={classes.cardContent}>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"h2\"\n                            >\n                              {card.name}\n                            </Typography>\n                            <Typography>\n                              <div>\n                                <div className=\"text-justify font-italic\">\n                                  Contact: {card.contact}\n                                </div>\n                                <div className=\"text-justify font-italic\">\n                                  Location: {card.location}\n                                </div>\n                                <div className=\"text-justify font-italic\">\n                                  price: {card.price}\n                                </div>\n                                <div className=\"text-justify font-italic\">\n                                  Quantity: {card.quantity}\n                                </div>\n                                <div className=\"text-justify font-italic\">\n                                  Provider: {card.vendor}\n                                </div>\n                              </div>\n                            </Typography>\n                          </CardContent>\n                          <CardActions>\n                            <Button size=\"small\" color=\"primary\">\n                              Buy\n                            </Button>\n                            <Button size=\"small\" color=\"primary\">\n                              More Details\n                            </Button>\n                          </CardActions>\n                        </Card>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Container>\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProp = (state) => ({\n  catagories: state.products.catagories,\n});\n\nexport default connect(mapStateToProp, {})(Catagory);\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n    height: 0,\n    marginTop: \"30%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  rootCard: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n}));\n\nexport default () => useStyles();\n","const isEmpty = (value) =>\n  value === undefined ||\n  value === null ||\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\n  (typeof value === \"string\" && value.trim().length === 0);\n//(typeof value === \"Array\" && value.trim().length === 0)\n\nexport default isEmpty;\n","import { SET_CURRENT_USER } from \"../actions/types\";\nimport isEmpty from \"../../functions/is-Empty\";\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_ERRORS_CATAGORIES,\n  GET_ERRORS_PRODUCT,\n  GET_ERRORS_LOGIN,\n  GET_ERRORS_REGISTER,\n  GET_ERRORS_PRODUCTBYID,\n  ERROR_SELLING_PRODUCT,\n} from \"../actions/types\";\n\nconst initialState = {\n  products: null,\n  catagories: null,\n  login: null,\n  register: null,\n  productsById: null,\n  errorSellingProduct: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS_CATAGORIES:\n      return {\n        ...state,\n        catagories: action.payload,\n      };\n    case GET_ERRORS_PRODUCT:\n      return {\n        ...state,\n        products: action.payload,\n      };\n    case GET_ERRORS_LOGIN:\n      return {\n        ...state,\n        login: action.payload,\n      };\n    case GET_ERRORS_REGISTER:\n      return {\n        ...state,\n        register: action.payload,\n      };\n    case GET_ERRORS_PRODUCTBYID:\n      return {\n        ...state,\n        productsById: action.payload,\n      };\n    case ERROR_SELLING_PRODUCT:\n      return {\n        ...state,\n        errorSellingProduct: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_PRODUCTS,\n  SET_CATAGORIES,\n  SET_PRODUCTS_BY_ID,\n  SELL_PRODUCT,\n} from \"../actions/types\";\n//import isEmpty from \"../../functions/is-Empty\";\n\nconst initialState = {\n  products: null,\n  catagories: null,\n  productsById: null,\n  soldProduct: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n      };\n    case SET_CATAGORIES:\n      return {\n        ...state,\n        catagories: action.payload,\n      };\n    case SET_PRODUCTS_BY_ID:\n      return {\n        ...state,\n        productsById: action.payload,\n      };\n    case SELL_PRODUCT:\n      return {\n        ...state,\n        soldProduct: action.payload.id,\n      };\n    default:\n      return state;\n  }\n}\n","//root reducer\nimport { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport productsReducer from \"./productReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  products: productsReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers/index\";\n//console.log(rootReducer);\nconst middleware = [thunk];\n\nconst initialState = {};\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Container from \"@material-ui/core/Container\";\n\n//import Header from \"./components/HeaderAndFooter\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Login from \"./components/Routes/Login\";\nimport Register from \"./components/Routes/Register\";\nimport DashBoard from \"./components/Routes/DashBoard\";\nimport Sell from \"./components/Routes/SellProduct\";\nimport Profile from \"./components/Routes/profile\";\nimport { Footer } from \"./components/functions/Footer\";\nimport Header from \"./components/functions/Header\";\nimport Catagory from \"./components/Routes/catagories\";\n//import history from \"./components/history\";\nimport classes from \"./components/styles/styles\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouteLink,\n} from \"react-router-dom\";\n\n//store\nimport { Provider } from \"react-redux\";\nimport store from \"./components/store/store\";\nimport { setCurrentUser } from \"./components/store/actions/authActions\";\n\n//checking for local storage to check user is logged in or not\nif (localStorage.user) {\n  store.dispatch(setCurrentUser(JSON.parse(localStorage.user)));\n}\n\nclass App extends React.Component {\n  render() {\n    //console.log(store);\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <React.Fragment>\n              <CssBaseline />\n              <Header classes={classes} />\n\n              <Container className=\"pt-5 pb-5\">\n                <Switch>\n                  <Route exact path=\"/\">\n                    <DashBoard classes={classes} />\n                  </Route>\n                  <Route exact path=\"/login\">\n                    <Login classes={classes} />\n                  </Route>\n                  <Route exact path=\"/register\">\n                    <Register classes={classes} />\n                  </Route>\n                  <Route exact path=\"/sell\">\n                    <Sell classes={classes} />\n                  </Route>\n                  <Route exact path=\"/catagory\">\n                    <Catagory classes={classes} />\n                  </Route>\n                  <Route exact path=\"/profile\">\n                    <Profile classes={classes} />\n                  </Route>\n                </Switch>\n              </Container>\n\n              <Footer classes={classes} />\n            </React.Fragment>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}